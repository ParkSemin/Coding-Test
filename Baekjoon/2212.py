'''
<문제>
- N개의 센서는 적어도 하나의 집중국과는 통신해야 함
- 각 집중국은 센서의 수신 가능 역역을 조절할 수 있음.
  이를 최소화 해야 함.
- 고속도로는 평면상의 직선이라 가정
- 각 센서들은 이 직선 위의 한 기점인 원점으로부터 정수 거리에 놓여있다고 가정
<입력>
- 첫째 줄 : N(1<=N<=10,000) - 센서의 개수
- 둘째 줄 : K(1<=K<=1,000) - 최대 집중국의 개수
- 셋째 줄 : N개의 센서의 각 좌표(좌표의 절댓값은 1,000,000이하)(좌표는 공백으로 구분)

<출력>
- K개의 집중국의 수신 가능 영역 길이 합의 최솟값

<예제 입력1>
N : 6
K : 2
좌표: 1 6 9 3 6 7 => 정렬: 1 3 6 6 7 9
            각 좌표의 차이:  2 3 0 1 2
            이 차이가 큰 좌표 사이에 집중국을 세우면 안됨
            => 좌표의 차이가 큰 지점을 없애도록 집중국을 세워야 함
            
        집중국의 개수는 2개이므로 좌표는 2개의 범위로 나눠질 수 있음.
        => 즉, 좌표 사이에 1개의 공간이 생기는 것.
        만약 집중국의 개수가 3개라면 좌표는 3개의 범위로 나뉘게 되고 공간을 기준으로
        본다면 2개의 공간이 생김.
        ==> 집중국의 개수가 K일 때, K-1개의 공간이 생김

        각 좌표의 차이는 [2, 3, 0, 1, 2]로 총 5개인데 이를 최소로 만들어야 하니
        가장 큰 것의 간격을 제거하도록 집중국을 세우면 됨. 현재 집중국은 2개이므로
        간격은 총 1(2-1)개가 제거되며 가장 큰 값인 3을 지우고 나면 총합은 5가 됨.
첫번쨰 집중국: 3
3: 2 0

두번째 집중국: 7
7: 1 0 2
'''
# 1. 입력 받기
N = int(input())
K = int(input())
Dot = sorted(list(map(int, input().split()))) # 좌표를 미리 오름차순으로 정렬

# 2. 좌표의 차이 구해서 내림차순 정렬 후 K-1~마지막까지의 합을 출력
diff = sorted([Dot[i+1] - Dot[i] for i in range(N-1)], reverse=True) # reverse=True : 내림차순 정렬
print(sum(diff[K-1:]))